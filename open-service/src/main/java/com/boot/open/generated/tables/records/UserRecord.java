/*
 * This file is generated by jOOQ.
*/
package com.boot.open.generated.tables.records;


import com.boot.open.generated.tables.User;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record10<Integer, String, String, Integer, Integer, String, Boolean, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1581006346;

    /**
     * Setter for <code>open.user.id</code>. 自增id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>open.user.id</code>. 自增id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>open.user.user_name</code>. 用户名称
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>open.user.user_name</code>. 用户名称
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>open.user.description</code>. 用户描述
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>open.user.description</code>. 用户描述
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>open.user.age</code>. 年龄
     */
    public void setAge(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>open.user.age</code>. 年龄
     */
    public Integer getAge() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>open.user.sex</code>. 性别 1 男 2 女
     */
    public void setSex(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>open.user.sex</code>. 性别 1 男 2 女
     */
    public Integer getSex() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>open.user.password</code>. 用户密码
     */
    public void setPassword(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>open.user.password</code>. 用户密码
     */
    public String getPassword() {
        return (String) get(5);
    }

    /**
     * Setter for <code>open.user.is_deleted</code>. 删除标记
     */
    public void setIsDeleted(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>open.user.is_deleted</code>. 删除标记
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>open.user.deleted_at</code>. 删除时间
     */
    public void setDeletedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>open.user.deleted_at</code>. 删除时间
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>open.user.created_at</code>. 创建时间
     */
    public void setCreatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>open.user.created_at</code>. 创建时间
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>open.user.updated_at</code>. 更新时间
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>open.user.updated_at</code>. 更新时间
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, Integer, Integer, String, Boolean, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, Integer, Integer, String, Boolean, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return User.USER.USER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return User.USER.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return User.USER.AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return User.USER.SEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return User.USER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return User.USER.IS_DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field8() {
        return User.USER.DELETED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field9() {
        return User.USER.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field10() {
        return User.USER.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component8() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component9() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value8() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value9() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(Integer value) {
        setAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value5(Integer value) {
        setSex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value6(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value7(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value8(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value9(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, String value6, Boolean value7, LocalDateTime value8, LocalDateTime value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String userName, String description, Integer age, Integer sex, String password, Boolean isDeleted, LocalDateTime deletedAt, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(User.USER);

        set(0, id);
        set(1, userName);
        set(2, description);
        set(3, age);
        set(4, sex);
        set(5, password);
        set(6, isDeleted);
        set(7, deletedAt);
        set(8, createdAt);
        set(9, updatedAt);
    }
}
