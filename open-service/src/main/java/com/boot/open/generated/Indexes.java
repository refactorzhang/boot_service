/*
 * This file is generated by jOOQ.
*/
package com.boot.open.generated;


import com.boot.open.generated.tables.Request;
import com.boot.open.generated.tables.SchemaVersion;
import com.boot.open.generated.tables.User;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling indexes of tables of the <code>open</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index REQUEST_IDX_REQUEST_URI = Indexes0.REQUEST_IDX_REQUEST_URI;
    public static final Index REQUEST_PRIMARY = Indexes0.REQUEST_PRIMARY;
    public static final Index SCHEMA_VERSION_PRIMARY = Indexes0.SCHEMA_VERSION_PRIMARY;
    public static final Index SCHEMA_VERSION_SCHEMA_VERSION_S_IDX = Indexes0.SCHEMA_VERSION_SCHEMA_VERSION_S_IDX;
    public static final Index USER_PRIMARY = Indexes0.USER_PRIMARY;
    public static final Index USER_UNIQ_USER_NAME = Indexes0.USER_UNIQ_USER_NAME;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 extends AbstractKeys {
        public static Index REQUEST_IDX_REQUEST_URI = createIndex("idx_request_uri", Request.REQUEST, new OrderField[] { Request.REQUEST.REQUEST_URI }, false);
        public static Index REQUEST_PRIMARY = createIndex("PRIMARY", Request.REQUEST, new OrderField[] { Request.REQUEST.ID }, true);
        public static Index SCHEMA_VERSION_PRIMARY = createIndex("PRIMARY", SchemaVersion.SCHEMA_VERSION, new OrderField[] { SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK }, true);
        public static Index SCHEMA_VERSION_SCHEMA_VERSION_S_IDX = createIndex("schema_version_s_idx", SchemaVersion.SCHEMA_VERSION, new OrderField[] { SchemaVersion.SCHEMA_VERSION.SUCCESS }, false);
        public static Index USER_PRIMARY = createIndex("PRIMARY", User.USER, new OrderField[] { User.USER.ID }, true);
        public static Index USER_UNIQ_USER_NAME = createIndex("uniq_user_name", User.USER, new OrderField[] { User.USER.USER_NAME }, true);
    }
}
